package com.tunjicus.utsdpm.controllers

import com.tunjicus.utsdpm.dtos.AutogenWrapperDto
import com.tunjicus.utsdpm.exceptions.ExceptionResponse
import com.tunjicus.utsdpm.exceptions.SecurityExceptionResponse
import com.tunjicus.utsdpm.services.AutogenService
import io.swagger.v3.oas.annotations.Operation
import io.swagger.v3.oas.annotations.media.Content
import io.swagger.v3.oas.annotations.media.Schema
import io.swagger.v3.oas.annotations.responses.ApiResponse
import io.swagger.v3.oas.annotations.tags.Tag
import org.springframework.http.MediaType
import org.springframework.security.access.prepost.PreAuthorize
import org.springframework.web.bind.annotation.GetMapping
import org.springframework.web.bind.annotation.PostMapping
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RestController

@RestController
@PreAuthorize("hasAnyRole('ADMIN', 'ANALYST', 'MANAGER', 'SUPERVISOR')")
@RequestMapping(value = ["/api/autogen"], produces = [MediaType.APPLICATION_JSON_VALUE])
@Tag(
  name = "Autogen",
  description = "Endpoint for generating and submitting DPM data from When2Work"
)
class AutogenController(private val autogenService: AutogenService) {

  @Operation(
    summary = "Autogenerate DPM data",
    responses =
      [
        ApiResponse(
          responseCode = "200",
          description = "DPMs were generated/retrieved successfully",
          content = [Content(schema = Schema(implementation = AutogenWrapperDto::class))]
        ),
        ApiResponse(
          responseCode = "401",
          description = "Unauthorized, need to login",
          content = [Content(schema = Schema(implementation = SecurityExceptionResponse::class))]
        ),
        ApiResponse(
          responseCode = "403",
          description = "User does not have the correct permissions to perform this action",
          content = [Content(schema = Schema(implementation = SecurityExceptionResponse::class))]
        ),
        ApiResponse(
          responseCode = "500",
          description = "Something went wrong trying to generate the DPMs",
          content = [Content(schema = Schema(implementation = ExceptionResponse::class))]
        )]
  )
  @GetMapping
  fun autogen(): AutogenWrapperDto = autogenService.autogenDtos()

  @Operation(
    summary = "Submits the autogenerated DPMs",
    responses =
      [
        ApiResponse(responseCode = "200", description = "The DPMs were submitted"),
        ApiResponse(
          responseCode = "401",
          description = "Unauthorized, need to login",
          content = [Content(schema = Schema(implementation = SecurityExceptionResponse::class))]
        ),
        ApiResponse(
          responseCode = "403",
          description = "User does not have the correct permissions to perform this action",
          content = [Content(schema = Schema(implementation = SecurityExceptionResponse::class))]
        ),
        ApiResponse(
          responseCode = "409",
          description = "AutoSubmit was already called for today",
          content = [Content(schema = Schema(implementation = ExceptionResponse::class))]
        )]
  )
  @PostMapping("/submit")
  fun autoSubmit() = autogenService.autoSubmit()
}
